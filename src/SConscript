env=Environment(tools=["default",git_tag_version])
conf=Configure(env)

# DEBUGGING
debug=ARGUMENTS.get("debug",0)
if int(debug):
	env.Append(CCFLAGS="-g")

# RASPBERRY PI
raspi=ARGUMENTS.get("raspi",0)
if conf.CheckCHeader("wiringPi.h"):
	wiringpi=True
	#env.Append(CCFLAGS="-Ofast -mfpu=vfp -mfloat-abi=hard -march=armv6zk -mtune=arm1176jzf-s")
	env.Append(CCFLAGS="-DHAS_WIRINGPI")
else:
	wiringpi=False

env=conf.Finish()

# PYTHON
import distutils.sysconfig
env.Append(CPPPATH=[distutils.sysconfig.get_python_inc()])
pythonlib="python"+distutils.sysconfig.get_config_var("VERSION")
#print(pythonlib)
#env.Append(LIBS=pythonlib)


# flags
env.Append(CCFLAGS="-std=c++11")
env.Append(CCFLAGS="-DBOOST_ALL_DYN_LINK")

libs=[
"wt",
"wthttp",
"boost_system",
"boost_thread",
"boost_filesystem",
"boost_log",
"boost_log_setup",
"pthread",
"boost_signals",
"boost_python"
]
libs+=[pythonlib]

sources_widgets=[
"widgets/EndpointWidget.cpp",
"widgets/OnOffButtonWidget.cpp",
"widgets/SliderWidget.cpp"
]
sources_python=Glob("python/*.cpp")

sources_daemon=[
"constants.cpp",
"Endpoint.cpp",
"ScalarEndpoint.cpp",
"HardwareEndpoint.cpp",
"FakeEndpoint.cpp",
"exceptions.cpp",
"heinzd.cpp",
"heinz.cpp",
"EndpointListWidget.cpp",
"WebApp.cpp",
"config/config_loader.cpp",
"MultiplexerEndpoint.cpp"
]
sources_daemon+=sources_widgets
sources_daemon+=sources_python


sources_raspi=[
"backends/raspi.cpp"
]
libs_raspi=[
"wiringPi"
]

if wiringpi:
    sources_daemon+=sources_raspi
    libs+=libs_raspi

configfile=env.Command("heinz.conf","../config/example.conf",Copy("$TARGET", "$SOURCE"))
example=env.Alias("example",configfile)

heinzd=env.Program(target="heinzd",source=sources_daemon,LIBS=libs)

install_bin=env.Install("/usr/bin",heinzd)
env.Alias("install",[install_bin])

Default(heinzd)
